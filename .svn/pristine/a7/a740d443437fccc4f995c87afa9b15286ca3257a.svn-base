using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

public class GameSceneManager : MonoBehaviour
{
    #region Singleton

    public static GameSceneManager instance; // variable to store the actual instance for the class object

    void Awake()
    {
        /* if object is already created */
        if (instance != null)
        {
            Debug.LogWarning("More than one instance of GameSceneManager found!");
            return;
        }
        instance = this;
    }

    #endregion

    public int currentLevelIndex;

    public GameObject timer;
    public Text time_Min;
    public Text time_Sec;

    public GameObject pausePanel;
    public GameObject optionPanel;    public GameObject winningPanel;
    public GameObject CertQuitPanel;
    public GameObject charUnlockPanel;
    public GameObject lastLevelPanel;
    public List<Sprite> character2D;
    public Image charUnlockPanelImage;
    private int charUnlockImageIndex = -1;

    public GameObject[] star;
    public GameObject[] star_last;
    [HideInInspector] public List<bool> isCharUnlockedInThisStage = new List<bool>();

    AsyncOperation async;

    private void Start()
    {       
        RankingManager.instance.GameStart();
        StarInitialize();

        for (int i = 0; i < 15; ++i)
            isCharUnlockedInThisStage.Add(false);
    }

    void Update ()
    {
        time_Min.text = ((int)(RankingManager.instance.timer / 60)).ToString();
        time_Sec.text = ((int)(RankingManager.instance.timer % 60)).ToString();

        if (Input.GetKeyDown(KeyCode.Escape))
            PopPausePanel();

        UpdateCheatCode();
    }

    void UpdateCheatCode()
    {
        if (Input.GetKeyDown(KeyCode.Keypad0))
        {
            Time.timeScale = 1.0f;
            SceneManager.LoadScene("MainMenu");
        }
        else if (Input.GetKeyDown(KeyCode.Keypad1))
        {
            Time.timeScale = 1.0f;
            SceneManager.LoadScene("H_Tutorial");
        }
        else if (Input.GetKeyDown(KeyCode.Keypad2))
        {
            Time.timeScale = 1.0f;
            SceneManager.LoadScene("H_Lv1");
        }
        else if (Input.GetKeyDown(KeyCode.Keypad3))
        {
            Time.timeScale = 1.0f;
            SceneManager.LoadScene("H_Lv2");
        }
        else if (Input.GetKeyDown(KeyCode.Keypad4))
        {
            Time.timeScale = 1.0f;
            SceneManager.LoadScene("C_Tutorial");
        }
        else if (Input.GetKeyDown(KeyCode.Keypad5))
        {
            Time.timeScale = 1.0f;
            SceneManager.LoadScene("C_Lv1");
        }
        else if (Input.GetKeyDown(KeyCode.Keypad6))
        {
            Time.timeScale = 1.0f;
            SceneManager.LoadScene("C_Lv2");
        }
        else if (Input.GetKeyDown(KeyCode.Keypad7))
        {
            Time.timeScale = 1.0f;
            SceneManager.LoadScene("L_Tutorial");
        }
        else if (Input.GetKeyDown(KeyCode.Keypad8))
        {
            Time.timeScale = 1.0f;
            SceneManager.LoadScene("L_Lv1");
        }
        else if (Input.GetKeyDown(KeyCode.Keypad9))
        {
            Time.timeScale = 1.0f;
            SceneManager.LoadScene("L_Lv2");
        }
        else if (Input.GetKeyDown(KeyCode.KeypadDivide))
        {
            Time.timeScale = 1.0f;
            SceneManager.LoadScene("M_Lv1");
        }
        else if (Input.GetKeyDown(KeyCode.KeypadMultiply))
        {
            Time.timeScale = 1.0f;
            SceneManager.LoadScene("M_Lv2");
        }
        else if (Input.GetKeyDown(KeyCode.KeypadMinus))
        {
            Time.timeScale = 1.0f;
            SceneManager.LoadScene("M_Lv3");
        }
    }

    public void PopPausePanel()
    {        
        bool active = !pausePanel.activeInHierarchy;
        bool active_win = !winningPanel.activeInHierarchy;

        if (active_win == false)
            return;

        if (active == true)
            Time.timeScale = 0;
        else
            Time.timeScale = 1;

        pausePanel.SetActive(active);
        optionPanel.SetActive(false);
    }

    public void PopupOptionPanel()
    {
        bool active = !optionPanel.activeInHierarchy;

        SoundManager.instance.PlaySound("ButtonSound");
        optionPanel.SetActive(active);
    }

    public void PopUpWinningPanel()
    {
        for (int i = 0; i < isCharUnlockedInThisStage.Count; ++i)
        {
            if (isCharUnlockedInThisStage[i])
            {
                PopUpCharacterUnlockPanel(i);
                break;
            }
        }

        if (CharacterSelectionManager.instance.unlockByForceHistory.Count != 0)
        {
            PopUpCharacterUnlockPanel(CharacterSelectionManager.instance.unlockByForceHistory[0]);
        }

        winningPanel.SetActive(true);
        SoundManager.instance.PlaySound("ButtonSound");
    }

    public void PopLastLevelPanel()
    {
        for (int i = 0; i < isCharUnlockedInThisStage.Count; ++i)
        {
            if (isCharUnlockedInThisStage[i])
            {
                PopUpCharacterUnlockPanel(i);
                break;
            }
        }

        if (CharacterSelectionManager.instance.unlockByForceHistory.Count != 0)
        {
            PopUpCharacterUnlockPanel(CharacterSelectionManager.instance.unlockByForceHistory[0]);
        }

        lastLevelPanel.SetActive(true);
        SoundManager.instance.PlaySound("ButtonSound");
    }

    public void OnConfirmWin()
    {
        SceneManager.LoadScene("LevelSelectionMenu");        
    }

    public void GoToNextLevel()
    {
        SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex + 1);
    }

    public void ResumeGame()
    {
        SoundManager.instance.PlaySound("ButtonSound");
        PopPausePanel();
    }

    public void RestartGame()
    {
        CharacterSelectionManager.instance.UnlockCharacterByForce(13); // Unlock oldtv
        Time.timeScale = 1;
        SoundManager.instance.PlaySound("ButtonSound");
        SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);
    }

    public void GiveUpGame()
    {
        Time.timeScale = 1;
        SoundManager.instance.PlaySound("ButtonSound");
        SceneManager.LoadScene("MainMenu");
    }

    public void Option()
    {
        SoundManager.instance.PlaySound("ButtonSound");
        PopupOptionPanel();
    }

    public void QuitGame()
    {
        SoundManager.instance.PlaySound("ButtonSound");

        CertQuitPanel.SetActive(true);
    }

    public void CertQuit_Yes()
    {
        SoundManager.instance.PlaySound("ButtonSound");

#if UNITY_EDITOR
        UnityEditor.EditorApplication.isPlaying = false;
#else
        Application.Quit();
#endif
    }

    public void CertQuit_No()
    {
        SoundManager.instance.PlaySound("ButtonSound");

        CertQuitPanel.SetActive(false);
    }

    public void GoToCreditScene()
    {
        Time.timeScale = 1;
        SceneManager.LoadScene("CreditScene");
    }

    public bool IsGoalPosOccupied(Vector3 goalPos)
    {
        Character[] characters = GameObject.FindObjectsOfType<Character>();
        int charNum = characters.Length;

        Vector3[] RoundedCharPos = new Vector3[charNum];

        for (int i = 0; i < charNum; i++)
        {
            RoundedCharPos[i] = new Vector3((float)Math.Round(characters[i].transform.position.x), (float)Math.Round(characters[i].transform.position.y), (float)Math.Round(characters[i].transform.position.z));
        }

        for (int i = 0; i < charNum; i++)
        {
            if (goalPos == RoundedCharPos[i])
                return false;
        }

        return true;
    }

    public void TimerOnOff()
    {
        bool active = timer.activeInHierarchy;

        timer.SetActive(!active);
    }

    public void StarRating(int num, int level)
    {
        for (int i = 0; i < num; i++)
            star[i].SetActive(true);

        if (level != 12)
        {
            for (int i = 0; i < num; i++)
                star[i].SetActive(true);
        }
        else
        {
            for (int i = 0; i < 3; i++)
                star_last[i].SetActive(false);

            for (int i = 0; i < num; i++)
                star_last[i].SetActive(true);
        }
    }

    public void StarInitialize()
    {
        for (int i = 0; i < 3; i++)
            star[i].SetActive(false);
    }

    public void PopUpCharacterUnlockPanel(int index)
    {
        charUnlockPanel.SetActive(true);
        CharacterSelectionManager.instance.isLocked[index] = false;
        charUnlockPanelImage.sprite = character2D[index];
        charUnlockImageIndex = index;

        if (CharacterSelectionManager.instance.unlockByForceHistory.Count != 0)
        {
            CharacterSelectionManager.instance.unlockByForceHistory.RemoveAt(0);
        }
    }

    public void OnConfirmCharacterUnlockPanel()
    {
        bool isThereAnyCharUnlockOnStack = false;

        for (int i = charUnlockImageIndex + 1; i < isCharUnlockedInThisStage.Count; ++i)
        {
            if (isCharUnlockedInThisStage[i])
            {
                isThereAnyCharUnlockOnStack = true;
                PopUpCharacterUnlockPanel(i);
                break;
            }
        }

        if (CharacterSelectionManager.instance.unlockByForceHistory.Count != 0)
        {
            isThereAnyCharUnlockOnStack = true;
            PopUpCharacterUnlockPanel(CharacterSelectionManager.instance.unlockByForceHistory[0]);
        }

        if (!isThereAnyCharUnlockOnStack)
            charUnlockPanel.SetActive(false);
    }
}

