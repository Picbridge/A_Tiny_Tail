using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;

public class Level
{
    public int id;
    public int map_height;
    public int map_width;
    public string levelName;

    public Tile[,] tile_map;

    public Level(int id_)
    {
        id = id_;
        map_height = 0;
        map_width = 0;
    }

    public void TileSetting()
    {
        Debug.Log(map_width);
        Debug.Log(map_height);

        if (map_height == 0 || map_width == 0)
        {
            Debug.Log("HEIGHT OR WIDTH OF MAP IS NOT SET!");
        }
        else
        {
            tile_map = new Tile[map_height + 1, map_width + 1];

            for (int i = 0; i < map_height + 1; i++)
            {
                for (int j = 0; j < map_width + 1; j++)
                {
                    tile_map[i, j] = new Tile();
                }
            }
        }
    }
}

public class Tile
{
    public bool isGoingLeft;
    public bool isGoingUp;
    public bool isGoingRight;
    public bool isGoingDown;
}



public class TileMapManager : MonoBehaviour
{    
    public static TileMapManager instance;

    public int levelSize = 8;

    public Level[] level;
    public float tilePortion;
    
    private void Awake()
    {
        instance = this;

        DontDestroyOnLoad(this);
    }

    void Start ()
    {
        level = new Level[levelSize];        
        
        for(int i = 0; i < levelSize; i++)
            level[i] = new Level(i);

        level[0].levelName = "H_Tutorial.txt";
        level[1].levelName = "H_Lv2.txt";
        level[2].levelName = "C_Tutorial.txt";
        level[3].levelName = "C_Lv2.txt";
        level[4].levelName = "L_Tutorial.txt";
        level[5].levelName = "L_Lv2.txt";
        level[6].levelName = "M_Lv1.txt";
        level[7].levelName = "M_Lv2.txt";

        tilePortion = 1.0f;

        for (int i = 0; i < levelSize; i++)
        {
            Debug.Log(level[i].levelName);
            FileReader.instance.ReadLevel(level[i]);
        }

    }

    private void Update()
    {
        //치트 코드
        if (Input.GetKeyDown(KeyCode.Alpha0) && GameSceneIndexManager.instance.currentSceneIndex <= levelSize)
        {
            GameSceneIndexManager.instance.currentSceneIndex = 0;
            GameSceneIndexManager.instance.currentLevelIndex = 0;
            SceneManager.LoadScene(0);
        }

        if (Input.GetKeyDown(KeyCode.Alpha1) && GameSceneIndexManager.instance.currentSceneIndex <= levelSize)
        {
            GameSceneIndexManager.instance.currentSceneIndex = 1;
            GameSceneIndexManager.instance.currentLevelIndex = 0;
            SceneManager.LoadScene(1);
        }

        if (Input.GetKeyDown(KeyCode.Alpha2) && GameSceneIndexManager.instance.currentSceneIndex <= levelSize)
        {
            GameSceneIndexManager.instance.currentSceneIndex = 2;
            GameSceneIndexManager.instance.currentLevelIndex = 1;
            SceneManager.LoadScene(2);
        }

        if (Input.GetKeyDown(KeyCode.Alpha3) && GameSceneIndexManager.instance.currentSceneIndex <= levelSize)
        {
            GameSceneIndexManager.instance.currentSceneIndex = 3;
            GameSceneIndexManager.instance.currentLevelIndex = 2;
            SceneManager.LoadScene(3);
        }

        if (Input.GetKeyDown(KeyCode.Alpha4) && GameSceneIndexManager.instance.currentSceneIndex <= levelSize)
        {
            GameSceneIndexManager.instance.currentSceneIndex = 4;
            GameSceneIndexManager.instance.currentLevelIndex = 3;
            SceneManager.LoadScene(4);
        }

        if (Input.GetKeyDown(KeyCode.Alpha5) && GameSceneIndexManager.instance.currentSceneIndex <= levelSize)
        {
            GameSceneIndexManager.instance.currentSceneIndex = 5;
            GameSceneIndexManager.instance.currentLevelIndex = 4;
            SceneManager.LoadScene(5);
        }

        if (Input.GetKeyDown(KeyCode.Alpha6) && GameSceneIndexManager.instance.currentSceneIndex <= levelSize)
        {
            GameSceneIndexManager.instance.currentSceneIndex = 6;
            GameSceneIndexManager.instance.currentLevelIndex = 5;
            SceneManager.LoadScene(6);
        }

        if (Input.GetKeyDown(KeyCode.Alpha7) && GameSceneIndexManager.instance.currentSceneIndex <= levelSize)
        {
            GameSceneIndexManager.instance.currentSceneIndex = 7;
            GameSceneIndexManager.instance.currentLevelIndex = 6;
            SceneManager.LoadScene(7);
        }

        if (Input.GetKeyDown(KeyCode.Alpha8) && GameSceneIndexManager.instance.currentSceneIndex <= levelSize)
        {
            GameSceneIndexManager.instance.currentSceneIndex = 8;
            GameSceneIndexManager.instance.currentLevelIndex = 7;
            SceneManager.LoadScene(8);
        }
    }

}
