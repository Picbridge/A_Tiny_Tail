using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;

public class GameSceneManager : MonoBehaviour
{
    public static GameSceneManager instance;

    public GameObject pausePanel;
    public GameObject optionPanel;
    public GameObject WinningPanel;


    //레벨 전의 다른 씬 갯수(main, level select, character select 등등)
    const int notLevelSceneNum = 0;

    private void Awake()
    {
        instance = this;
    }

    void Start ()
    {
        PlayerPrefs.SetString("lastLoadedScene", SceneManager.GetActiveScene().name);

    }
		
	void Update ()
    {
        if (Input.GetKeyDown(KeyCode.Escape))
            PopPausePanel();
    }

   public  void PopPausePanel()
    {        
        bool active = !pausePanel.activeInHierarchy;

        if (active == true)
            Time.timeScale = 0;
        else
            Time.timeScale = 1;

        pausePanel.SetActive(active);
    }

    public void PopupOptionPanel()
    {
        bool active = !optionPanel.activeInHierarchy;

        optionPanel.SetActive(active);
    }

    public void PopUpWinningPanel()
    {
        bool active = !WinningPanel.activeInHierarchy;

        if (active == false)
        {
            Time.timeScale = 1.0f;
            SceneManager.LoadScene(notLevelSceneNum + ++GameSceneIndexManager.instance.currentLevelIndex);
        }
        else
            Time.timeScale = 0.0f;
        
        WinningPanel.SetActive(active);
    }

    public void ResumeGame()
    {
        PopPausePanel();
    }

    public void RestartGame()
    {
        Time.timeScale = 1;

        string sceneName = PlayerPrefs.GetString("lastLoadedScene");
        SceneManager.LoadScene(sceneName);
    }

    public void GiveUpGame()
    {
        SceneManager.LoadScene("MainMenu");
    }

    public void Option()
    {
        PopupOptionPanel();
    }

    public void QuitGame()
    {
#if UNITY_EDITOR
        UnityEditor.EditorApplication.isPlaying = false;
#else
        Application.Quit();
#endif
    }    
   
}
