using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class CharacterManager : Singleton<CharacterManager> {

    private List<Character> characters = new List<Character>();
    private Character currentCharacter;

    //private void OnEnable()
    //{
    //    if (NUM_OF_CHARACTERS > characters.Capacity)
    //        characters.Capacity = NUM_OF_CHARACTERS;
    //    characters.AddRange(new Character[NUM_OF_CHARACTERS - characters.Count]);
    //}

    // Use this for initialization
    void Start () {
        //DontDestroyOnLoad(this); 이 기능 나중에 singleton에 넣기 (파라미터로 받아서)
    }

    // Update is called once per frame
    void Update () {
		
	}

    void ChangeCharacterSkin(int index)
    {
        if (index < 0 || index >= characters.Count)
        {
            Debug.LogWarning("ChangeCharacterSkin() out of index");
            return;
        }

        //if (characters[index].locked)
        //{
        //    Debug.LogWarning("ChangeCharacterSkin() invalid index access");
        //    return;
        //}

        currentCharacter = characters[index]; // 캐릭터가 가진 정보까지 바꿔야하나? // 씬 중간에 스킨을 바꿀 경우 정보 저장까지
    }

    public void AddCharacter(Character character)
    {
        for (int i = 0; i < characters.Count; ++i)
        {
            if (characters[i].name == character.name)
            {
                Debug.LogWarning("Duplicated character is on the list : " + character);
                return;
            }
        }

        characters.Add(character);
    }

    public void RemoveCharacter(Character character)
    {
        for (int i = 0; i < characters.Count; ++i)
        {
            if (characters[i].name == character.name)
            {
                characters.Remove(character);
                return;
            }
        }

        Debug.LogWarning("Character not on the list is attempted to delete : " + character);
    }
}
