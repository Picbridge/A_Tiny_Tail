using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;

public class GameSceneManager : MonoBehaviour
{
    //public static GameSceneManager instance;

    public GameObject pausePanel;
    public GameObject optionPanel;
    public GameObject WinningPanel;
    public GameObject WinAllLevelPanel;

    public 

	void Update ()
    {
        if (Input.GetKeyDown(KeyCode.Escape))
            PopPausePanel();
    }

   public  void PopPausePanel()
    {        
        bool active = !pausePanel.activeInHierarchy;
        bool active_win = !WinningPanel.activeInHierarchy;

        if (active_win == false)
            return;

        if (active == true)
            Time.timeScale = 0;
        else
            Time.timeScale = 1;

        pausePanel.SetActive(active);
        optionPanel.SetActive(false);
    }

    public void PopupOptionPanel()
    {
        bool active = !optionPanel.activeInHierarchy;

        optionPanel.SetActive(active);
    }

    public void PopUpWinningPanel()
    {
        bool active = !WinningPanel.activeInHierarchy;

        if (active == false)
        {
            Time.timeScale = 1.0f;

            if (GameSceneIndexManager.instance.currentLevelIndex <= TileMapManager.instance.levelSize - 1)
            {
                ++GameSceneIndexManager.instance.currentLevelIndex;
                SceneManager.LoadScene(++GameSceneIndexManager.instance.currentSceneIndex);
            }
        }
        else
            Time.timeScale = 0.0f;
        
        WinningPanel.SetActive(active);
    }

    public void PopupWinAllLevelPanel()
    {
        bool active = !WinAllLevelPanel.activeInHierarchy;

        if (active == false)       
            Time.timeScale = 1.0f;
        
        else
            Time.timeScale = 0.0f;

        WinAllLevelPanel.SetActive(active);
    }

    public void ResumeGame()
    {
        PopPausePanel();
    }

    public void RestartGame()
    {
        Time.timeScale = 1;

        SceneManager.LoadScene(GameSceneIndexManager.instance.currentSceneIndex);
    }

    public void GiveUpGame()
    {
        Time.timeScale = 1;

        SceneManager.LoadScene("MainMenu");
    }

    public void Option()
    {
        PopupOptionPanel();
    }

    public void QuitGame()
    {
#if UNITY_EDITOR
        UnityEditor.EditorApplication.isPlaying = false;
#else
        Application.Quit();
#endif
    }

    public bool IsGoalPosOccupied(Vector3 goalPos)
    {
        Character[] characters = GameObject.FindObjectsOfType<Character>();
        int charNum = characters.Length;

        Vector3[] RoundedCharPos = new Vector3[charNum];

        for (int i = 0; i < charNum; i++)
        {
            RoundedCharPos[i] = new Vector3((float)Math.Round(characters[i].transform.position.x), (float)Math.Round(characters[i].transform.position.y), (float)Math.Round(characters[i].transform.position.z));
        }

        for (int i = 0; i < charNum; i++)
        {
            if (goalPos == RoundedCharPos[i])
                return false;
        }

        return true;
    }
   
}
